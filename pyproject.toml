# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "onnx"
dynamic = ["version"]
description = "Open Neural Network Exchange"
readme = "README.md"
authors = [
    {name = "ONNX", email = "onnx-technical-discuss@lists.lfaidata.foundation"},
]
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "numpy >= 1.16.6", # TODO: Update once TensorFlow 2.6 is end of life
    "protobuf >= 3.20.2, < 4",
    "typing-extensions >= 3.6.2.1",
]
license = {text = "Apache License v2.0"}
requires-python = ">=3.7"

[project.urls]
Homepage = "https://onnx.ai/"
Repository = "https://github.com/onnx/onnx"

[project.scripts]
backend-test-tools = "onnx.backend.test.cmd_tools:main"
check-model = "onnx.bin.checker:check_model"
check-node = "onnx.bin.checker:check_node"

[tool.setuptools.packages.find]
include = ["onnx*"]

[tool.setuptools.package-data]
onnx = ["py.typed", "*.pyi"]

[tool.mypy]
follow_imports = "slient"
strict_optional = true
warn_return_any = true
warn_no_return = true
# TODO warn_unused_ignores = true
warn_redundant_casts = true
warn_incomplete_stub = true
# TODO disallow_untyped_calls = true
check_untyped_defs = true
# Allow bare generics like np.ndarray
disallow_any_generics = false
no_implicit_optional = true
# TODO disallow_incomplete_defs = true
# TODO disallow_subclassing_any = true
warn_unused_configs = true
show_error_codes = true
show_column_numbers = true
ignore_missing_imports = true
exclude = [
    '\.git',
    '__pycache__',
    '^build',
    '^third_party',
    '_pb2.py$',
    '\.cache',
    '\.eggs',
    '\.setuptools-cmake-build',
    'venv/',
]

[[tool.mypy.overrides]]
module = ['setup']
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    'onnx.onnx_data_pb',
    'onnx.onnx_data_pb2',
    'onnx.onnx_pb',
    'onnx.onnx_pb2',
    'onnx.onnx_ml_pb2',
    'onnx.onnx_ml_pb2',
    'onnx.onnx_operators_pb',
    'onnx.onnx_operators_ml_pb2',
]
ignore_errors = true

[tool.black]
# extend-exclude needs to be a regular expression
extend-exclude = "third_party/|venv/"
target-version = ["py37", "py38", "py39", "py310"]

[tool.isort]
profile = "black"
extend_skip_glob = [
    "third_party/*",
    "*_pb2*",
    ".setuptools-cmake-build/*",
    "venv",
]

[tool.pylint.message_control]
# This list is for vscode. Add new disables in pyproject_pylint.toml for lintrunner and CI.
# Exclude patterns should be modified in .lintrunner.toml
disable = [
    "format",
    "import-error",
    "line-too-long",
    "no-name-in-module",
    "useless-return",
]
